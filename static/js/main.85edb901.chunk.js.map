{"version":3,"sources":["components/PersonalInfo/PersonalInfo.module.scss","components/Skills/Skills.module.scss","App.module.scss","api/api.ts","redux/staff-reducer.ts","common/utils/images/loading.svg","common/utils/Preloader.tsx","components/PersonalInfo/PersonalInfo.tsx","components/Skills/Skills.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx"],"names":["module","exports","instance","axios","create","baseURL","API","get","firstName","lastName","occupation","post","skills","initState","occupations","staff","isLoading","setNewEmployee","payload","type","setSkills","setLoading","value","getOccupations","dispatch","a","console","log","res","data","Preloader","src","loading","alt","style","width","height","PersonalInfo","useForm","register","handleSubmit","errors","useDispatch","useSelector","state","onSubmit","className","content","personalInfoBlock","name","ref","required","maxLength","error","map","item","index","code","saveBtn","Skills","control","useFieldArray","fields","append","remove","filteredData","Object","values","filter","i","length","skillsBlock","skill","defaultValue","onClick","addBtn","id","removeBtn","App","useEffect","app","container","header","exact","to","activeClassName","activeTab","personalInfoTab","skillsTab","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85edb901.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"PersonalInfo_content__2ZGaI\",\"personalInfoBlock\":\"PersonalInfo_personalInfoBlock__3txkK\",\"firstName\":\"PersonalInfo_firstName__3msbf\",\"occupation\":\"PersonalInfo_occupation__eWfs9\",\"lastName\":\"PersonalInfo_lastName__1Hk1I\",\"saveBtn\":\"PersonalInfo_saveBtn__3BgHl\",\"error\":\"PersonalInfo_error__3T4_q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Skills_content__39kDk\",\"skillsBlock\":\"Skills_skillsBlock__H_ikd\",\"skill\":\"Skills_skill__16GBb\",\"addBtn\":\"Skills_addBtn__3zXN3\",\"removeBtn\":\"Skills_removeBtn__GK5UD\",\"saveBtn\":\"Skills_saveBtn__FQorq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2X9J8\",\"container\":\"App_container__1nuFX\",\"header\":\"App_header__2ZvKa\",\"personalInfoTab\":\"App_personalInfoTab__2y_25\",\"skillsTab\":\"App_skillsTab__kO8sg\",\"activeTab\":\"App_activeTab__3mw4n\"};","import axios from \"axios\";\r\nimport {EmployeeType, SkillType} from \"../redux/staff-reducer\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://605dbaf39386d200171bb218.mockapi.io/api/v1\",\r\n})\r\n\r\nexport const API = {\r\n    getOccupations() {\r\n        return instance.get(\"/occupations\")\r\n    },\r\n    setNewEmployee({firstName, lastName, occupation}: EmployeeType) {\r\n        return instance.post(\"/staff\", {firstName, lastName, occupation})\r\n    },\r\n    setSkills(skills: Array<SkillType>) {\r\n        return instance.post(\"/skills\", skills)\r\n    }\r\n}","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {API} from \"../api/api\";\r\nimport {AppRootStateType} from \"./store\";\r\n\r\nexport type OccupationType = {\r\n    code: string,\r\n    name: string\r\n}\r\n\r\nexport type EmployeeType = {\r\n    firstName: string\r\n    lastName: string\r\n    occupation?: string\r\n}\r\n\r\nexport type SkillType = string\r\n\r\nexport type InitStateType = {\r\n    occupations: Array<OccupationType>\r\n    skills: Array<SkillType>\r\n    staff: Array<EmployeeType>\r\n    isLoading: boolean\r\n}\r\n\r\nlet initState: InitStateType = {\r\n\r\n    occupations: [\r\n        {\r\n            \"code\": \"PRESIDENT\",\r\n            \"name\": \"President\"\r\n        },\r\n        {\r\n            \"code\": \"PHILANTHROPIST\",\r\n            \"name\": \"Bill Gates\"\r\n        },\r\n        {\r\n            \"code\": \"ASTRONAUT\",\r\n            \"name\": \"Astronaut\"\r\n        },\r\n        {\r\n            \"code\": \"JOCKEY\",\r\n            \"name\": \"Jockey\"\r\n        }\r\n    ],\r\n    skills: [],\r\n    staff: [],\r\n    isLoading: false\r\n}\r\n\r\nexport const staffReducer = (state = initState, action: ActionsType): InitStateType => {\r\n    switch (action.type) {\r\n        case \"rec-agency/staff/SET_OCCUPATIONS\":\r\n            return {\r\n                ...state, occupations: [...state.occupations, ...action.payload] //\r\n            }\r\n\r\n        case \"rec-agency/staff/SET_SKILLS\":\r\n            return {\r\n                ...state, skills: [...state.skills, ...action.payload]\r\n            }\r\n\r\n        case \"rec-agency/staff/SET_NEW_EMPLOYEE\":\r\n            return {\r\n                ...state, staff: [...state.staff, action.payload]\r\n            }\r\n\r\n        case \"rec-agency/staff/SET_LOADING\":\r\n            return {\r\n                ...state, isLoading: action.value\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// Actions\r\nconst setOccupations = (payload: Array<OccupationType>) => {\r\n    return {\r\n        type: 'rec-agency/staff/SET_OCCUPATIONS',\r\n        payload\r\n    } as const\r\n}\r\n\r\nconst setNewEmployee = (payload: EmployeeType) => {\r\n    return {\r\n        type: 'rec-agency/staff/SET_NEW_EMPLOYEE',\r\n        payload\r\n    } as const\r\n}\r\n\r\nconst setSkills = (payload: Array<SkillType>) => {\r\n    return {\r\n        type: 'rec-agency/staff/SET_SKILLS',\r\n        payload\r\n    } as const\r\n}\r\n\r\nconst setLoading = (value: boolean) => {\r\n    return {\r\n        type: 'rec-agency/staff/SET_LOADING',\r\n        value\r\n    } as const\r\n}\r\n\r\n// Thunks\r\ntype ThunkType = ThunkAction<void, AppRootStateType, unknown, ActionsType>\r\ntype ThunkDispatchType = ThunkDispatch<AppRootStateType, unknown, ActionsType>\r\n\r\nexport const getOccupations = async (dispatch: ThunkDispatchType) => {\r\n    try {\r\n        dispatch(setLoading(true))\r\n        console.log('fetching data... ')\r\n        let res = await API.getOccupations()\r\n        console.log(\"res: \", res)\r\n        dispatch(setLoading(false))\r\n        let data = res.data[0].occupations\r\n        dispatch(setOccupations(data))\r\n    } catch (e) {\r\n        console.log(e)\r\n        dispatch(setLoading(false))\r\n    }\r\n}\r\n\r\nexport const addNewEmployee = (payload: EmployeeType): ThunkType => async (dispatch: ThunkDispatchType) => {\r\n    try {\r\n        console.log(\"sending data... \", payload)\r\n        let res = await API.setNewEmployee(payload)\r\n        console.log(\"res: \", res)\r\n        dispatch(setNewEmployee(payload))\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const addSkills = (payload: Array<SkillType>): ThunkType => async (dispatch: ThunkDispatchType) => {\r\n    try {\r\n        console.log(\"sending data... \", payload)\r\n        let res = await API.setSkills(payload)\r\n        console.log(\"res: \", res)\r\n        dispatch(setSkills(payload))\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\n// Actions types\r\ntype SetOccupationsType = ReturnType<typeof setOccupations>\r\ntype SetNewEmployeeType = ReturnType<typeof setNewEmployee>\r\ntype SetSkillsType = ReturnType<typeof setSkills>\r\ntype SetLoadingType = ReturnType<typeof setLoading>\r\n\r\ntype ActionsType =\r\n    | SetOccupationsType\r\n    | SetNewEmployeeType\r\n    | SetSkillsType\r\n    | SetLoadingType","export default __webpack_public_path__ + \"static/media/loading.ac5d5761.svg\";","import loading from './images/loading.svg'\r\nimport React from 'react'\r\n\r\nexport function Preloader() {\r\n    return (\r\n        <div>\r\n            <img src={loading} alt=\"\" style={{width: '70px', height: '70px'}}/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {SubmitHandler, useForm} from 'react-hook-form';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../redux/store\";\r\nimport {addNewEmployee, OccupationType} from \"../../redux/staff-reducer\";\r\nimport style from \"./PersonalInfo.module.scss\";\r\nimport {Preloader} from \"../../common/utils/Preloader\";\r\n\r\ntype InputsType = {\r\n    firstName: string\r\n    lastName: string\r\n    occupation?: \"PRESIDENT\" | \"PHILANTHROPIST\" | \"ASTRONAUT\" | \"JOCKEY\"\r\n}\r\n\r\nexport default function PersonalInfo() {\r\n    const {register, handleSubmit, errors} = useForm<InputsType>()\r\n\r\n    const dispatch = useDispatch()\r\n    const onSubmit: SubmitHandler<InputsType> = ({firstName, lastName, occupation}) => {\r\n        dispatch(addNewEmployee({firstName, lastName, occupation}))\r\n    }\r\n\r\n    const occupations = useSelector<AppRootStateType, Array<OccupationType>>(\r\n        state => state.staff.occupations\r\n    )\r\n    const isLoading = useSelector<AppRootStateType, boolean>(state => state.staff.isLoading)\r\n\r\n    return (\r\n        isLoading\r\n            ? <Preloader/>\r\n            : <form onSubmit={handleSubmit(onSubmit)} className={style.content}>\r\n                <div className={style.personalInfoBlock}>\r\n                    <div className={style.firstName}>\r\n                        <label>First name</label>\r\n                        <input type=\"text\"\r\n                               name=\"firstName\"\r\n                               ref={register({required: true, maxLength: 100})}/>\r\n                        {errors.firstName && <span className={style.error}>First name is required</span>}\r\n                    </div>\r\n                    <div className={style.occupation}>\r\n                        <label>Occupation</label>\r\n                        <select name=\"occupation\" ref={register}>\r\n                            <option value=\"\"></option>\r\n                            {occupations.map((item, index) => {\r\n                                return (\r\n                                    <option\r\n                                        key={index + item.code}\r\n                                        value={item.code}\r\n                                    >\r\n                                        {item.code}\r\n                                    </option>\r\n                                )\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <div className={style.lastName}>\r\n                        <label>Last name</label>\r\n                        <input type=\"text\"\r\n                               name=\"lastName\"\r\n                               ref={register({required: true, maxLength: 100})}/>\r\n                        {errors.lastName && <span className={style.error}>Last name is required</span>}\r\n                    </div>\r\n                </div>\r\n                <input type=\"submit\" value=\"SAVE\" className={style.saveBtn}/>\r\n            </form>\r\n    )\r\n}","import React from 'react';\r\nimport {SubmitHandler, useFieldArray, useForm} from 'react-hook-form';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addSkills} from \"../../redux/staff-reducer\";\r\nimport style from \"./Skills.module.scss\"\r\n\r\nexport default function Skills() {\r\n    const {register, control, handleSubmit} = useForm()\r\n\r\n    const {fields, append, remove} = useFieldArray({\r\n        control,\r\n        name: \"skill\"\r\n    })\r\n\r\n    type InputsType = {\r\n        skill: string\r\n    }\r\n    const dispatch = useDispatch()\r\n    const onSubmit: SubmitHandler<InputsType> = data => {\r\n        console.log(\"form data: \", data)\r\n        let arrayOfData = Object.values(data)\r\n        let filteredData = arrayOfData.filter(i => i.length > 0)\r\n        filteredData.length > 0 && dispatch(addSkills(filteredData))\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)} className={style.content}>\r\n            <div className={style.skillsBlock}>\r\n                <label>Skills</label>\r\n                <div className={style.skill}>\r\n                    <input ref={register()} name={\"skill0\"} defaultValue=\"\"/>\r\n                    <button type=\"button\" onClick={() => append({})} className={style.addBtn}>+</button>\r\n                </div>\r\n\r\n                {fields.map(({id, skill}, index) => {\r\n                    return (\r\n                        <div key={id} className={style.skill}>\r\n                            <input ref={register()} name={`skill${index + 1}`} defaultValue={skill}/>\r\n                            <button type=\"button\" onClick={() => remove(index)} className={style.removeBtn}>-</button>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n            <input type=\"submit\" value=\"SAVE\" className={style.saveBtn}/>\r\n        </form>\r\n    )\r\n}","import React, {useEffect} from 'react';\nimport {BrowserRouter as Router, NavLink, Route, Switch} from 'react-router-dom';\nimport PersonalInfo from \"./components/PersonalInfo/PersonalInfo\";\nimport Skills from \"./components/Skills/Skills\";\nimport style from './App.module.scss'\nimport {useDispatch} from \"react-redux\";\nimport {getOccupations} from \"./redux/staff-reducer\";\n\nfunction App() {\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(getOccupations)\n    }, [dispatch]);\n\n    return (\n        <div className={style.app}>\n            <div className={style.container}>\n                <Router>\n                    <div className={style.header}>\n                        <NavLink exact to=\"/recruit-agency-form\" activeClassName={style.activeTab}\n                                 className={style.personalInfoTab}>\n                            PERSONAL INFO\n                        </NavLink>\n                        <NavLink exact to=\"/recruit-agency-form/skills\" activeClassName={style.activeTab}\n                                 className={style.skillsTab}>\n                            SKILLS\n                        </NavLink>\n                    </div>\n                    <Switch>\n                        <Route exact path=\"/recruit-agency-form\" render={() => <PersonalInfo/>}/>\n                        <Route exact path=\"/recruit-agency-form/skills\" render={() => <Skills/>}/>\n                    </Switch>\n                </Router>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {staffReducer} from \"./staff-reducer\";\r\n\r\nlet reducers = combineReducers(\r\n    {\r\n        staff: staffReducer\r\n    }\r\n)\r\n\r\nexport let store = createStore(reducers, applyMiddleware(thunk))\r\n\r\nexport type AppRootStateType = ReturnType<typeof reducers>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}